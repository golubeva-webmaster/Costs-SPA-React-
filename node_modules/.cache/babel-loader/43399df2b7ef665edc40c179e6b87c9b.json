{"ast":null,"code":"var _jsxFileName = \"/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js\",\n    _s = $RefreshSig$();\n\nimport CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Costs(props) {\n  _s();\n\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeYearHundler = year => {\n    console.log(year, typeof year);\n    setSelectedYear(year);\n    props.costs.forEach(cost => {\n      console.log(cost.date.getFullYear());\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"costs\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(CostFilter, {\n          year: selectedYear,\n          onChangeYear: changeYearHundler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), props.costs.map(cost => {\n        return /*#__PURE__*/_jsxDEV(CostItem, {\n          date: cost.date,\n          description: cost.description,\n          amount: cost.amount\n        }, cost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Costs, \"3JyZSyd4/ouL28saHC4gke+LBKI=\");\n\n_c = Costs;\nexport default Costs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Costs\");","map":{"version":3,"sources":["/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js"],"names":["CostItem","Card","CostFilter","React","useState","Costs","props","selectedYear","setSelectedYear","changeYearHundler","year","console","log","costs","forEach","cost","date","getFullYear","map","description","amount","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMK,iBAAiB,GAAIC,IAAD,IAAU;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,OAAOA,IAAzB;AACAF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACAJ,IAAAA,KAAK,CAACO,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;AAC5BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,IAAL,CAAUC,WAAV,EAAZ;AACD,KAFD;AAGD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEV,YAAlB;AAAgC,UAAA,YAAY,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGH,KAAK,CAACO,KAAN,CAAYK,GAAZ,CAAiBH,IAAD,IAAU;AACzB,4BACE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,UAAA,WAAW,EAAED,IAAI,CAACI,WAHpB;AAIE,UAAA,MAAM,EAAEJ,IAAI,CAACK;AAJf,WACOL,IAAI,CAACM,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/BQhB,K;;KAAAA,K;AAiCT,eAAeA,KAAf","sourcesContent":["import CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\n\nfunction Costs(props) {\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeYearHundler = (year) => {\n    console.log(year, typeof year);\n    setSelectedYear(year);\n    props.costs.forEach((cost) => {\n      console.log(cost.date.getFullYear());\n    });\n  };\n\n  return (\n    <div>\n      <Card className=\"costs\">\n        <Card className=\"filter\">\n          <CostFilter year={selectedYear} onChangeYear={changeYearHundler} />\n        </Card>\n        {props.costs.map((cost) => {\n          return (\n            <CostItem\n              key={cost.id}\n              date={cost.date}\n              description={cost.description}\n              amount={cost.amount}\n            />\n          );\n        })}\n      </Card>\n    </div>\n  );\n}\n\nexport default Costs;\n"]},"metadata":{},"sourceType":"module"}