{"ast":null,"code":"var _jsxFileName = \"/home/user/React-samuray-path/test/src/components/NewCost/CostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./CostForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CostForm = props => {\n  _s();\n\n  const [inputName, setInputName] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\"); // const [userInput, setUserInput] = useState({\n  //   name: \"\",\n  //   amount: \"\",\n  //   date: \"\",\n  // });\n\n  const nameChangeHandler = event => {\n    setInputName(event.target.value); // setUserInput({\n    //   ...userInput,\n    //   name: event.target.value,\n    // });\n    // setUserInput((previouseState) => { // самый последний стейт\n    //   return {\n    //     ...previouseState,\n    //     name: event.target.value,\n    //   };\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setInputAmount(event.target.value); // setUserInput({\n    //   ...userInput,\n    //   amount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = event => {\n    setInputDate(event.target.value); // setUserInput({\n    //   ...userInput,\n    //   date: event.target.value,\n    // });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const costDate = {\n      name: inputName,\n      amount: inputAmount,\n      date: new Date(inputDate)\n    };\n    props.onSaveCostData(costDate);\n    setInputName(\"\");\n    setInputAmount(\"\");\n    setInputDate(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-cost__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-cost__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputName,\n          onChange: nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-cost__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0421\\u0443\\u043C\\u043C\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: inputAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-cost__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0414\\u0430\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2020-01-01\",\n          max: \"2023-11-31\",\n          step: \"1\",\n          value: inputDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-cost__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CostForm, \"fAER9hML9jU+M15Brg824D+yVIs=\");\n\n_c = CostForm;\nexport default CostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostForm\");","map":{"version":3,"sources":["/home/user/React-samuray-path/test/src/components/NewCost/CostForm.js"],"names":["React","useState","CostForm","props","inputName","setInputName","inputAmount","setInputAmount","inputDate","setInputDate","nameChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","costDate","name","amount","date","Date","onSaveCostData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CAH0B,CAK1B;AACA;AACA;AACA;AACA;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACnCN,IAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CADmC,CAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbD;;AAeA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACrCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADqC,CAErC;AACA;AACA;AACA;AACD,GAND;;AAQA,QAAME,iBAAiB,GAAIJ,KAAD,IAAW;AACnCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CADmC,CAEnC;AACA;AACA;AACA;AACD,GAND;;AAQA,QAAMG,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,IAAI,EAAEf,SADS;AAEfgB,MAAAA,MAAM,EAAEd,WAFO;AAGfe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASd,SAAT;AAHS,KAAjB;AAMAL,IAAAA,KAAK,CAACoB,cAAN,CAAqBL,QAArB;AACAb,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAZD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEO,aAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEZ,SAA1B;AAAqC,UAAA,QAAQ,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,GAAG,EAAC,MAFN;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEJ,WAJT;AAKE,UAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAeE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,GAAG,EAAC,YAFN;AAGE,UAAA,GAAG,EAAC,YAHN;AAIE,UAAA,IAAI,EAAC,GAJP;AAKE,UAAA,KAAK,EAAEN,SALT;AAME,UAAA,QAAQ,EAAEO;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA0BE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA1FD;;GAAMb,Q;;KAAAA,Q;AA4FN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CostForm.css\";\n\nconst CostForm = (props) => {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n\n  // const [userInput, setUserInput] = useState({\n  //   name: \"\",\n  //   amount: \"\",\n  //   date: \"\",\n  // });\n\n  const nameChangeHandler = (event) => {\n    setInputName(event.target.value);\n\n    // setUserInput({\n    //   ...userInput,\n    //   name: event.target.value,\n    // });\n    // setUserInput((previouseState) => { // самый последний стейт\n    //   return {\n    //     ...previouseState,\n    //     name: event.target.value,\n    //   };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setInputAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   amount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setInputDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   date: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const costDate = {\n      name: inputName,\n      amount: inputAmount,\n      date: new Date(inputDate),\n    };\n\n    props.onSaveCostData(costDate);\n    setInputName(\"\");\n    setInputAmount(\"\");\n    setInputDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-cost__controls\">\n        <div className=\"new-cost__control\">\n          <label>Название</label>\n          <input type=\"text\" value={inputName} onChange={nameChangeHandler} />\n        </div>\n        <div className=\"new-cost__control\">\n          <label>Сумма</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={inputAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-cost__control\">\n          <label>Дата</label>\n          <input\n            type=\"date\"\n            min=\"2020-01-01\"\n            max=\"2023-11-31\"\n            step=\"1\"\n            value={inputDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-cost__actions\">\n          <button type=\"submit\">Добавить расход</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default CostForm;\n"]},"metadata":{},"sourceType":"module"}