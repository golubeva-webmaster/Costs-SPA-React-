{"ast":null,"code":"var _jsxFileName = \"/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js\",\n    _s = $RefreshSig$();\n\nimport CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Costs(props) {\n  _s();\n\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeYearHundler = year => {\n    setSelectedYear(year);\n  };\n\n  const filteredCosts = props.costs.filter(cost => {\n    return cost.date.getFullYear().toString() === selectedYear;\n  });\n\n  let costContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043E\\u0432 \\u043D\\u0435\\u0442\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n\n  if (filteredCosts.length > 0) {\n    costContent = filteredCosts.map(cost => {\n      /*#__PURE__*/\n      _jsxDEV(CostItem, {\n        date: cost.date,\n        description: cost.description,\n        amount: cost.amount\n      }, cost.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"costs\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(CostFilter, {\n          year: selectedYear,\n          onChangeYear: changeYearHundler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), costContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Costs, \"3JyZSyd4/ouL28saHC4gke+LBKI=\");\n\n_c = Costs;\nexport default Costs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Costs\");","map":{"version":3,"sources":["/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js"],"names":["CostItem","Card","CostFilter","React","useState","Costs","props","selectedYear","setSelectedYear","changeYearHundler","year","filteredCosts","costs","filter","cost","date","getFullYear","toString","costContent","length","map","description","amount","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMK,iBAAiB,GAAIC,IAAD,IAAU;AAClCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU;AACjD,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,YAA9C;AACD,GAFqB,CAAtB;;AAIA,MAAIW,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAEA,MAAIP,aAAa,CAACQ,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,IAAAA,WAAW,GAAGP,aAAa,CAACS,GAAd,CAAmBN,IAAD,IAAU;AACxC;AAAA,cAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,QAAA,WAAW,EAAED,IAAI,CAACO,WAHpB;AAIE,QAAA,MAAM,EAAEP,IAAI,CAACQ;AAJf,SACOR,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA;AAMD,KAPa,CAAd;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEhB,YAAlB;AAAgC,UAAA,YAAY,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGS,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnCQb,K;;KAAAA,K;AAqCT,eAAeA,KAAf","sourcesContent":["import CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\n\nfunction Costs(props) {\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeYearHundler = (year) => {\n    setSelectedYear(year);\n  };\n\n  const filteredCosts = props.costs.filter((cost) => {\n    return cost.date.getFullYear().toString() === selectedYear;\n  });\n\n  let costContent = <p>Расходов нет</p>;\n\n  if (filteredCosts.length > 0) {\n    costContent = filteredCosts.map((cost) => {\n      <CostItem\n        key={cost.id}\n        date={cost.date}\n        description={cost.description}\n        amount={cost.amount}\n      />;\n    });\n  }\n\n  return (\n    <div>\n      <Card className=\"costs\">\n        <Card className=\"filter\">\n          <CostFilter year={selectedYear} onChangeYear={changeYearHundler} />\n        </Card>\n        {costContent}\n      </Card>\n    </div>\n  );\n}\n\nexport default Costs;\n"]},"metadata":{},"sourceType":"module"}