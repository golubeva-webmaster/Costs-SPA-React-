{"ast":null,"code":"var _jsxFileName = \"/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js\",\n    _s = $RefreshSig$();\n\nimport CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Costs(props) {\n  _s();\n\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n  const [costs, setCosts] = useState(props.costs);\n\n  const changeYearHundler = year => {\n    setSelectedYear(year);\n    let arr = props.costs.filter(cost => {\n      return cost.date.getFullYear().toString() === year;\n    });\n    setCosts(arr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"costs\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(CostFilter, {\n          year: selectedYear,\n          onChangeYear: changeYearHundler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), props.costs.map(cost => {\n        return /*#__PURE__*/_jsxDEV(CostItem, {\n          date: cost.date,\n          description: cost.description,\n          amount: cost.amount\n        }, cost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Costs, \"tKtxa/B3jRit+cY/nsEiMy1okEY=\");\n\n_c = Costs;\nexport default Costs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Costs\");","map":{"version":3,"sources":["/home/user/React-samuray-path/Costs/Costs-SPA-React-/src/components/Costs/Costs.js"],"names":["CostItem","Card","CostFilter","React","useState","Costs","props","selectedYear","setSelectedYear","costs","setCosts","changeYearHundler","year","arr","filter","cost","date","getFullYear","toString","map","description","amount","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,KAAK,CAACG,KAAP,CAAlC;;AAEA,QAAME,iBAAiB,GAAIC,IAAD,IAAU;AAClCJ,IAAAA,eAAe,CAACI,IAAD,CAAf;AACA,QAAIC,GAAG,GAAGP,KAAK,CAACG,KAAN,CAAYK,MAAZ,CAAoBC,IAAD,IAAU;AACrC,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCN,IAA9C;AACD,KAFS,CAAV;AAGAF,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEN,YAAlB;AAAgC,UAAA,YAAY,EAAEI;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGL,KAAK,CAACG,KAAN,CAAYU,GAAZ,CAAiBJ,IAAD,IAAU;AACzB,4BACE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,UAAA,WAAW,EAAED,IAAI,CAACK,WAHpB;AAIE,UAAA,MAAM,EAAEL,IAAI,CAACM;AAJf,WACON,IAAI,CAACO,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhCQjB,K;;KAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import CostItem from \"./CostItem\";\nimport \"./Costs.css\";\nimport Card from \"../UI/Card\";\nimport CostFilter from \"./CostFilter\";\nimport React, { useState } from \"react\";\n\nfunction Costs(props) {\n  // Поднять сюда данные из CostFilter\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n  const [costs, setCosts] = useState(props.costs);\n\n  const changeYearHundler = (year) => {\n    setSelectedYear(year);\n    let arr = props.costs.filter((cost) => {\n      return cost.date.getFullYear().toString() === year;\n    });\n    setCosts(arr);\n  };\n\n  return (\n    <div>\n      <Card className=\"costs\">\n        <Card className=\"filter\">\n          <CostFilter year={selectedYear} onChangeYear={changeYearHundler} />\n        </Card>\n        {props.costs.map((cost) => {\n          return (\n            <CostItem\n              key={cost.id}\n              date={cost.date}\n              description={cost.description}\n              amount={cost.amount}\n            />\n          );\n        })}\n      </Card>\n    </div>\n  );\n}\n\nexport default Costs;\n"]},"metadata":{},"sourceType":"module"}